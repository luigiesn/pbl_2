#ifndef KEYBOARD_H
#define KEYBOARD_H

#include "ProcessManager.h"

#include "HAL_ADC.h"

/**
 * The ADC channel number associated to the analog keyboard
 */
#define KBD_AD_CH 7

/**
 * Last event from a keyboard key
 *
 * @warning The <b>LONG_PRESSING</b> event detection is not implemented.
 */
typedef enum{
    /** A key <b>is not</b> being pressed. */
    kysNOT_PRESSING,
    /** A key <b>is</b> being pressed. */
    kysPRESSING,
    /**  If a key is long pressed. */
    kysLONG_PRESSING,
    /** No event occurred. */
    kysNULL
}keyState;

/** Key map from keyboard */
typedef enum{
    key_K1, key_K2, key_K3, key_K4, key_K5
}key;

/**
 * @brief Initializes the keyboard
 *
 * @warning Boot routine must be called before
 * any other.
 */
void KBD_Boot(void);

/**
 * @brief Gets a key event
 *
 * If occurred, get the last event generated by a key.
 *
 * @param k Key the event is read from.
 * @return A event from a key.
 *
 * @warning Only the last event is returned. If
 * a key is checked more than once before the code
 * loop, a <b>NULL</b> event is returned. So, is recommended
 * to check if something occurred with the key.
 */
keyState KBD_GetEvent(key k);

/**
 * @brief Checks if a event on a key occurred.
 */
bool KBD_Changed(void);

#endif
